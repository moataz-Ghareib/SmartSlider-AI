import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  ArrowLeft, 
  TrendingUp, 
  DollarSign, 
  Users, 
  Target, 
  BarChart3,
  FileText,
  CheckCircle,
  AlertTriangle,
  Star,
  Calendar,
  MapPin,
  Phone,
  Mail,
  Download,
  Share2,
  Play,
  Zap,
  Shield,
  Award,
  Globe,
  Building,
  Briefcase,
  Clock,
  PieChart,
  LineChart
} from 'lucide-react';
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip, 
  ResponsiveContainer,
  LineChart as RechartsLineChart,
  Line,
  PieChart as RechartsPieChart,
  Pie,
  Cell
} from 'recharts';
import toast from 'react-hot-toast';

interface EnhancedSectorPageProps {
  sectorName: string;
  onBack: () => void;
}

interface SectorData {
  name: string;
  nameEn: string;
  description: string;
  icon: string;
  color: string;
  marketSize: string;
  growthRate: number;
  averageInvestment: number;
  paybackPeriod: number;
  profitMargin: number;
  riskLevel: 'low' | 'medium' | 'high';
  
  problems: {
    title: string;
    description: string;
    impact: 'high' | 'medium' | 'low';
  }[];
  
  solutions: {
    title: string;
    description: string;
    benefits: string[];
  }[];
  
  deliverables: {
    category: string;
    items: {
      name: string;
      description: string;
      timeline: string;
    }[];
  }[];
  
  sla: {
    responseTime: string;
    deliveryTime: string;
    revisions: number;
    support: string;
  };
  
  caseStudies: {
    title: string;
    client: string;
    challenge: string;
    solution: string;
    results: string[];
    roi: string;
  }[];
  
  marketInsights: {
    trends: { title: string; impact: string; }[];
    opportunities: { title: string; potential: string; }[];
    challenges: { title: string; mitigation: string; }[];
  };
  
  financialProjections: {
    timeframe: string;
    revenue: number;
    costs: number;
    profit: number;
  }[];
  
  competitorAnalysis: {
    name: string;
    marketShare: number;
    strengths: string[];
    weaknesses: string[];
  }[];
  
  regulations: {
    title: string;
    authority: string;
    requirement: string;
    timeline: string;
  }[];
}

const EnhancedSectorPage: React.FC<EnhancedSectorPageProps> = ({ sectorName, onBack }) => {
  const [sectorData, setSectorData] = useState<SectorData | null>(null);
  const [activeTab, setActiveTab] = useState('overview');
  const [isLoading, setIsLoading] = useState(true);
  const [showCTAModal, setShowCTAModal] = useState(false);

  useEffect(() => {
    loadSectorData();
  }, [sectorName]);

  const loadSectorData = async () => {
    setIsLoading(true);
    try {
      // ูุญุงูุงุฉ ุชุญููู ุจูุงูุงุช ุงููุทุงุน
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      const mockData: SectorData = {
        name: 'ุงููุทุงุนู ูุงูููุงูู',
        nameEn: 'Restaurants & Cafes',
        description: 'ูุทุงุน ุงููุทุงุนู ูุงูููุงูู ูุดูุฏ ูููุงู ูุณุชูุฑุงู ูู ุงูููููุฉุ ูุฏููุนุงู ุจุฑุคูุฉ 2030 ูุงูุงูุชูุงู ุงููุชุฒุงูุฏ ุจุชุฌุฑุจุฉ ุงูุทุนุงู ูุซูุงูุฉ ุงูุถูุงูุฉ.',
        icon: '๐ฝ๏ธ',
        color: 'from-orange-500 to-red-500',
        marketSize: '45 ูููุงุฑ ุฑูุงู',
        growthRate: 8.5,
        averageInvestment: 500000,
        paybackPeriod: 18,
        profitMargin: 25,
        riskLevel: 'medium',
        
        problems: [
          {
            title: 'ุตุนูุจุฉ ุงุฎุชูุงุฑ ุงููููุน ุงูููุงุณุจ',
            description: 'ุชุญุฏูุฏ ุงููููุน ุงูุฃูุซู ูุชุทูุจ ุชุญููู ุฏููู ููููุทูุฉ ูุงูููุงูุณูู ูุงูุฌูููุฑ ุงููุณุชูุฏู',
            impact: 'high'
          },
          {
            title: 'ุชูุฏูุฑ ุงูุชูุงููู ุงูุชุดุบูููุฉ',
            description: 'ุญุณุงุจ ุงูุชูุงููู ุงููุนููุฉ ููุฅูุฌุงุฑ ูุงูุฑูุงุชุจ ูุงูููุงุฏ ุงูุฎุงู ูุงููุฑุงูู',
            impact: 'high'
          },
          {
            title: 'ููู ุงููุชุทูุจุงุช ุงูุชูุธูููุฉ',
            description: 'ุงูุชุฑุงุฎูุต ุงููุทููุจุฉ ูู ุงูุจูุฏูุฉ ูุงูุตุญุฉ ูุงูุฏูุงุน ุงููุฏูู',
            impact: 'medium'
          }
        ],
        
        solutions: [
          {
            title: 'ุชุญููู ุงููููุน ูุงูููุงูุณูู',
            description: 'ููุฏู ุชุญูููุงู ุดุงููุงู ูููููุน ุงูููุชุฑุญ ูุน ุฏุฑุงุณุฉ ุงูููุงูุณูู ูู ุงูููุทูุฉ',
            benefits: ['ุฎุฑุงุฆุท ุชูุงุนููุฉ ููููุงูุณูู', 'ุชุญููู ูุซุงูุฉ ุงููุฑูุฑ', 'ุชูููู ุงูุฌูููุฑ ุงููุณุชูุฏู']
          },
          {
            title: 'ูููุฐุฌ ูุงูู ูุชูุฏู',
            description: 'ูููุฐุฌ ูุงูู ุดุงูู ูุบุทู ุฌููุน ุฌูุงูุจ ุงููุดุฑูุน ูุน ุณููุงุฑูููุงุช ูุชุนุฏุฏุฉ',
            benefits: ['ุชููุนุงุช ูุงููุฉ ุฏูููุฉ', 'ุชุญููู ุงูุญุณุงุณูุฉ', 'ููุทุฉ ุงูุชุนุงุฏู']
          },
          {
            title: 'ุฏููู ุงูุชุฑุงุฎูุต ูุงูุงูุชุซุงู',
            description: 'ุฏููู ุดุงูู ููุญุตูู ุนูู ุฌููุน ุงูุชุฑุงุฎูุต ุงููุทููุจุฉ',
            benefits: ['ูุงุฆูุฉ ูุฑุฌุนูุฉ ูุงููุฉ', 'ุฌุฏุงูู ุฒูููุฉ', 'ุฌูุงุช ุงูุงุชุตุงู']
          }
        ],
        
        deliverables: [
          {
            category: 'ุงูุฏุฑุงุณุฉ ุงูุฃุณุงุณูุฉ',
            items: [
              { name: 'ุฏุฑุงุณุฉ ุงูุณูู', description: 'ุชุญููู ุดุงูู ููุณูู ุงููุญูู ูุงููุฑุต', timeline: '3-5 ุฃูุงู' },
              { name: 'ุงููููุฐุฌ ุงููุงูู', description: 'ุชููุนุงุช ูุงููุฉ ุชูุตูููุฉ ูู 5 ุณููุงุช', timeline: '2-3 ุฃูุงู' },
              { name: 'ุชุญููู ุงููุฎุงุทุฑ', description: 'ุชูููู ุงููุฎุงุทุฑ ูุฎุทุท ุงูุชุฎููู', timeline: '1-2 ุฃูุงู' }
            ]
          },
          {
            category: 'ุงูุชุญููู ุงููุชูุฏู',
            items: [
              { name: 'ุชุญููู ุงูููุงูุณูู', description: 'ุฏุฑุงุณุฉ ุชูุตูููุฉ ููููุงูุณูู ุงููุจุงุดุฑูู', timeline: '2-3 ุฃูุงู' },
              { name: 'ุชุญููู ุงููููุน', description: 'ุชูููู ุงููููุน ูุน ุฎุฑุงุฆุท ุชูุงุนููุฉ', timeline: '1-2 ุฃูุงู' },
              { name: 'ุงุณุชุฑุงุชูุฌูุฉ ุงูุชุณููู', description: 'ุฎุทุฉ ุชุณููููุฉ ุดุงููุฉ ููุฅุทูุงู', timeline: '2-3 ุฃูุงู' }
            ]
          },
          {
            category: 'ุงููุฎุฑุฌุงุช ุงูููุงุฆูุฉ',
            items: [
              { name: 'ุงูุชูุฑูุฑ ุงูููุงุฆู', description: 'ุชูุฑูุฑ ุดุงูู ุจุชูุณูู ุงุญุชุฑุงูู', timeline: '1-2 ุฃูุงู' },
              { name: 'ุงูุนุฑุถ ุงูุชูุฏููู', description: 'ุนุฑุถ ูููุณุชุซูุฑูู ูุงูุฌูุงุช ุงูุชูููููุฉ', timeline: '1 ููู' },
              { name: 'ูููุงุช Excel', description: 'ููุงุฐุฌ ูุงููุฉ ูุงุจูุฉ ููุชุนุฏูู', timeline: '1 ููู' }
            ]
          }
        ],
        
        sla: {
          responseTime: '2 ุณุงุนุฉ',
          deliveryTime: '7-10 ุฃูุงู ุนูู',
          revisions: 3,
          support: '30 ููู'
        },
        
        caseStudies: [
          {
            title: 'ูุทุนู ุงูุฃุตุงูุฉ - ุงูุฑูุงุถ',
            client: 'ุดุฑูุฉ ุงูุถูุงูุฉ ุงููุชููุฒุฉ',
            challenge: 'ุฅุทูุงู ูุทุนู ุชุฑุงุซู ูู ููุทูุฉ ุชูุงูุณูุฉ ุนุงููุฉ',
            solution: 'ุชุญููู ุดุงูู ููุณูู ูุน ุชุฑููุฒ ุนูู ุงูุชููุฒ ูุงููููุฉ ุงูุชุฑุงุซูุฉ',
            results: ['ููู ุงูุฅูุฑุงุฏุงุช 150% ูู ุงูุณูุฉ ุงูุฃููู', 'ุงุณุชุฑุฏุงุฏ ุฑุฃุณ ุงููุงู ูู 14 ุดูุฑ', 'ุชูููู ุงูุนููุงุก 4.8/5'],
            roi: '180%'
          },
          {
            title: 'ูููู ุงููุฎุจุฉ - ุฌุฏุฉ',
            client: 'ูุณุชุซูุฑ ูุฑุฏู',
            challenge: 'ุฏุฎูู ุณูู ุงูููุงูู ุงููุชุฎุตุตุฉ ูู ููุทูุฉ ุฑุงููุฉ',
            solution: 'ุฏุฑุงุณุฉ ุชูุตูููุฉ ููุฌูููุฑ ุงููุณุชูุฏู ูุชุญููู ุงูููุงูุณูู',
            results: ['ูุตูู ูููุทุฉ ุงูุชุนุงุฏู ูู 8 ุฃุดูุฑ', 'ูุงูุด ุฑุจุญ 32%', 'ูุงุนุฏุฉ ุนููุงุก ูุฎูุตูู 500+'],
            roi: '145%'
          }
        ],
        
        marketInsights: {
          trends: [
            { title: 'ููู ุทูุจุงุช ุงูุชูุตูู', impact: 'ุงุฑุชูุงุน ุจูุณุจุฉ 40% ุณูููุงู' },
            { title: 'ุงูุงูุชูุงู ุจุงูุทุนุงู ุงูุตุญู', impact: 'ุฒูุงุฏุฉ ุงูุทูุจ ุจูุณุจุฉ 25%' },
            { title: 'ุงูุชุฌุงุฑุจ ุงูุชูุงุนููุฉ', impact: 'ุชุญุณู ุฑุถุง ุงูุนููุงุก ุจูุณุจุฉ 30%' }
          ],
          opportunities: [
            { title: 'ุงูุฃุญูุงุก ุงูุฌุฏูุฏุฉ', potential: 'ููู ุณูุงูู 15% ุณูููุงู' },
            { title: 'ุฎุฏูุงุช ุงูููุชุฑููุบ', potential: 'ุณูู ุจูููุฉ 2 ูููุงุฑ ุฑูุงู' },
            { title: 'ุงูููุงููู ุงููุชุฎุตุตุฉ', potential: 'ููุงูุด ุฑุจุญ ุฃุนูู ุจู 40%' }
          ],
          challenges: [
            { title: 'ุงุฑุชูุงุน ุชูุงููู ุงูุชุดุบูู', mitigation: 'ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ' },
            { title: 'ููุต ุงูุนูุงูุฉ ุงููุคููุฉ', mitigation: 'ุจุฑุงูุฌ ุงูุชุฏุฑูุจ ูุงูุชุทููุฑ' },
            { title: 'ุชุบูุฑ ุฃุฐูุงู ุงููุณุชููููู', mitigation: 'ุงููุฑููุฉ ูู ุงููุงุฆูุฉ ูุงูุฎุฏูุงุช' }
          ]
        },
        
        financialProjections: [
          { timeframe: 'ุงูุณูุฉ ุงูุฃููู', revenue: 1200000, costs: 900000, profit: 300000 },
          { timeframe: 'ุงูุณูุฉ ุงูุซุงููุฉ', revenue: 1440000, costs: 1020000, profit: 420000 },
          { timeframe: 'ุงูุณูุฉ ุงูุซุงูุซุฉ', revenue: 1728000, costs: 1140000, profit: 588000 },
          { timeframe: 'ุงูุณูุฉ ุงูุฑุงุจุนุฉ', revenue: 1900000, costs: 1235000, profit: 665000 },
          { timeframe: 'ุงูุณูุฉ ุงูุฎุงูุณุฉ', revenue: 2090000, costs: 1340000, profit: 750000 }
        ],
        
        competitorAnalysis: [
          { name: 'ุงููุทุงุนู ุงูุณุฑูุนุฉ', marketShare: 35, strengths: ['ุณุฑุนุฉ ุงูุฎุฏูุฉ', 'ุฃุณุนุงุฑ ููุงูุณุฉ'], weaknesses: ['ุฌูุฏุฉ ูุญุฏูุฏุฉ', 'ุชุฌุฑุจุฉ ุฃุณุงุณูุฉ'] },
          { name: 'ุงููุทุงุนู ุงููุงุฎุฑุฉ', marketShare: 25, strengths: ['ุฌูุฏุฉ ุนุงููุฉ', 'ุชุฌุฑุจุฉ ูููุฒุฉ'], weaknesses: ['ุฃุณุนุงุฑ ุนุงููุฉ', 'ุดุฑูุญุฉ ูุญุฏูุฏุฉ'] },
          { name: 'ุงููุทุงุนู ุงูุนุงุฆููุฉ', marketShare: 40, strengths: ['ุชููุน ุงููุงุฆูุฉ', 'ุฃุฌูุงุก ุนุงุฆููุฉ'], weaknesses: ['ุชูุงููู ุนุงููุฉ', 'ููุงูุณุฉ ุดุฏูุฏุฉ'] }
        ],
        
        regulations: [
          { title: 'ุชุฑุฎูุต ุงูุจูุฏูุฉ', authority: 'ุงูุฃูุงูุฉ/ุงูุจูุฏูุฉ', requirement: 'ุชุฑุฎูุต ูุฒุงููุฉ ุงููุดุงุท', timeline: '2-4 ุฃุณุงุจูุน' },
          { title: 'ุชุฑุฎูุต ุงูุตุญุฉ', authority: 'ูุฒุงุฑุฉ ุงูุตุญุฉ', requirement: 'ุดูุงุฏุฉ ุตุญูุฉ ููููุดุฃุฉ', timeline: '1-2 ุฃุณุงุจูุน' },
          { title: 'ุชุฑุฎูุต ุงูุฏูุงุน ุงููุฏูู', authority: 'ุงูุฏูุงุน ุงููุฏูู', requirement: 'ุดูุงุฏุฉ ุงูุณูุงูุฉ', timeline: '1-3 ุฃุณุงุจูุน' },
          { title: 'ุงูุณุฌู ุงูุชุฌุงุฑู', authority: 'ูุฒุงุฑุฉ ุงูุชุฌุงุฑุฉ', requirement: 'ุชุณุฌูู ุงููุดุงุท ุงูุชุฌุงุฑู', timeline: '1-2 ุฃุณุงุจูุน' }
        ]
      };
      
      setSectorData(mockData);
    } catch (error) {
      toast.error('ุฎุทุฃ ูู ุชุญููู ุจูุงูุงุช ุงููุทุงุน');
    } finally {
      setIsLoading(false);
    }
  };

  const handleCTAClick = (action: string) => {
    toast.success(`ุชู ุงูููุฑ ุนูู: ${action}`);
    setShowCTAModal(true);
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-saudi-green mx-auto mb-4"></div>
          <p className="text-gray-600 font-almarai">ุฌุงุฑู ุชุญููู ุจูุงูุงุช ุงููุทุงุน...</p>
        </div>
      </div>
    );
  }

  if (!sectorData) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <AlertTriangle className="h-16 w-16 text-yellow-500 mx-auto mb-4" />
          <h2 className="text-xl font-bold text-gray-900 font-almarai mb-2">ุงููุทุงุน ุบูุฑ ูุชููุฑ</h2>
          <p className="text-gray-600 font-almarai mb-4">ูู ูุชููู ูู ุงูุนุซูุฑ ุนูู ุจูุงูุงุช ูุฐุง ุงููุทุงุน</p>
          <button
            onClick={onBack}
            className="px-6 py-3 bg-saudi-green text-white rounded-lg hover:bg-green-700 transition-colors font-almarai"
          >
            ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-light-green">
      {/* ุฑุฃุณ ุงูุตูุญุฉ */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex items-center gap-4">
            <button
              onClick={onBack}
              className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
            >
              <ArrowLeft className="h-6 w-6 text-gray-600" />
            </button>
            <div className="flex items-center gap-4">
              <div className={`w-16 h-16 rounded-2xl bg-gradient-to-r ${sectorData.color} flex items-center justify-center text-3xl`}>
                {sectorData.icon}
              </div>
              <div>
                <h1 className="text-3xl font-bold text-gray-900 font-almarai">
                  {sectorData.name}
                </h1>
                <p className="text-gray-600 font-almarai">
                  {sectorData.description}
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* ูุคุดุฑุงุช ุฑุฆูุณูุฉ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center gap-3 mb-2">
              <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                <BarChart3 className="h-5 w-5 text-blue-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600 font-almarai">ุญุฌู ุงูุณูู</p>
                <p className="text-lg font-bold text-gray-900 font-almarai">{sectorData.marketSize}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center gap-3 mb-2">
              <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                <TrendingUp className="h-5 w-5 text-green-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600 font-almarai">ูุนุฏู ุงูููู</p>
                <p className="text-lg font-bold text-gray-900 font-almarai">{sectorData.growthRate}%</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center gap-3 mb-2">
              <div className="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center">
                <DollarSign className="h-5 w-5 text-yellow-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600 font-almarai">ุงูุงุณุชุซูุงุฑ ุงููุชูุณุท</p>
                <p className="text-lg font-bold text-gray-900 font-almarai">{sectorData.averageInvestment.toLocaleString()} ุฑ.ุณ</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center gap-3 mb-2">
              <div className="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
                <Clock className="h-5 w-5 text-purple-600" />
              </div>
              <div>
                <p className="text-sm text-gray-600 font-almarai">ูุชุฑุฉ ุงูุงุณุชุฑุฏุงุฏ</p>
                <p className="text-lg font-bold text-gray-900 font-almarai">{sectorData.paybackPeriod} ุดูุฑ</p>
              </div>
            </div>
          </div>
        </div>

        {/* ุงูุชุจููุจุงุช */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 mb-8">
          <div className="border-b border-gray-200">
            <nav className="flex overflow-x-auto">
              {[
                { id: 'overview', label: 'ูุธุฑุฉ ุนุงูุฉ', icon: Eye },
                { id: 'problems', label: 'ุงูุชุญุฏูุงุช', icon: AlertTriangle },
                { id: 'solutions', label: 'ุงูุญููู', icon: CheckCircle },
                { id: 'deliverables', label: 'ุงููุฎุฑุฌุงุช', icon: FileText },
                { id: 'insights', label: 'ุฑุคู ุงูุณูู', icon: TrendingUp },
                { id: 'cases', label: 'ูุตุต ูุฌุงุญ', icon: Star }
              ].map((tab) => {
                const IconComponent = tab.icon;
                return (
                  <button
                    key={tab.id}
                    onClick={() => setActiveTab(tab.id)}
                    className={`flex items-center gap-2 px-6 py-4 font-almarai font-medium transition-colors whitespace-nowrap ${
                      activeTab === tab.id
                        ? 'text-saudi-green border-b-2 border-saudi-green'
                        : 'text-gray-600 hover:text-gray-900'
                    }`}
                  >
                    <IconComponent className="h-5 w-5" />
                    {tab.label}
                  </button>
                );
              })}
            </nav>
          </div>

          <div className="p-8">
            {activeTab === 'overview' && <OverviewTab data={sectorData} />}
            {activeTab === 'problems' && <ProblemsTab problems={sectorData.problems} />}
            {activeTab === 'solutions' && <SolutionsTab solutions={sectorData.solutions} />}
            {activeTab === 'deliverables' && <DeliverablesTab deliverables={sectorData.deliverables} sla={sectorData.sla} />}
            {activeTab === 'insights' && <InsightsTab insights={sectorData.marketInsights} projections={sectorData.financialProjections} />}
            {activeTab === 'cases' && <CaseStudiesTab cases={sectorData.caseStudies} />}
          </div>
        </div>

        {/* CTA Section */}
        <div className="bg-gradient-to-r from-saudi-green to-saudi-gold rounded-2xl shadow-xl p-8 text-center text-white">
          <h2 className="text-3xl font-bold font-almarai mb-4">
            ุฌุงูุฒ ูุจุฏุก ูุดุฑูุนู ูู ูุทุงุน {sectorData.name}ุ
          </h2>
          <p className="text-xl font-almarai mb-8 opacity-90">
            ุงุญุตู ุนูู ุฏุฑุงุณุฉ ุฌุฏูู ุดุงููุฉ ููุฎุตุตุฉ ููุดุฑูุนู ุฎูุงู 7-10 ุฃูุงู ุนูู
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button
              onClick={() => handleCTAClick('ุทูุจ ุฏุฑุงุณุฉ ุฌุฏูู')}
              className="bg-white text-saudi-green px-8 py-4 rounded-xl font-almarai font-bold text-lg hover:bg-gray-100 transition-colors flex items-center justify-center gap-3"
            >
              <FileText className="h-6 w-6" />
              ุทูุจ ุฏุฑุงุณุฉ ุฌุฏูู
            </button>
            <button
              onClick={() => handleCTAClick('ุชุญุฏุซ ูุน ุฎุจูุฑ')}
              className="border-2 border-white text-white px-8 py-4 rounded-xl font-almarai font-bold text-lg hover:bg-white hover:text-saudi-green transition-colors flex items-center justify-center gap-3"
            >
              <Phone className="h-6 w-6" />
              ุชุญุฏุซ ูุน ุฎุจูุฑ
            </button>
          </div>
        </div>
      </div>

      {/* ูุงูุฐุฉ CTA */}
      <AnimatePresence>
        {showCTAModal && (
          <CTAModal onClose={() => setShowCTAModal(false)} sectorName={sectorData.name} />
        )}
      </AnimatePresence>
    </div>
  );
};

// ููููุงุช ุงูุชุจููุจุงุช
const OverviewTab: React.FC<{ data: SectorData }> = ({ data }) => (
  <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
    <div>
      <h3 className="text-xl font-bold text-gray-900 font-almarai mb-4">ุงูุฎุตุงุฆุต ุงูุฑุฆูุณูุฉ</h3>
      <div className="space-y-4">
        <div className="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
          <span className="font-medium text-gray-700 font-almarai">ูุงูุด ุงูุฑุจุญ ุงููุชููุน</span>
          <span className="font-bold text-saudi-green font-almarai">{data.profitMargin}%</span>
        </div>
        <div className="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
          <span className="font-medium text-gray-700 font-almarai">ูุณุชูู ุงููุฎุงุทุฑ</span>
          <span className={`font-bold font-almarai ${
            data.riskLevel === 'low' ? 'text-green-600' :
            data.riskLevel === 'medium' ? 'text-yellow-600' : 'text-red-600'
          }`}>
            {data.riskLevel === 'low' ? 'ููุฎูุถ' : data.riskLevel === 'medium' ? 'ูุชูุณุท' : 'ุนุงูู'}
          </span>
        </div>
      </div>
    </div>
    
    <div>
      <h3 className="text-xl font-bold text-gray-900 font-almarai mb-4">ุงูุชููุนุงุช ุงููุงููุฉ</h3>
      <ResponsiveContainer width="100%" height={200}>
        <BarChart data={data.financialProjections.slice(0, 3)}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="timeframe" />
          <YAxis />
          <Tooltip />
          <Bar dataKey="profit" fill="#006B3F" />
        </BarChart>
      </ResponsiveContainer>
    </div>
  </div>
);

const ProblemsTab: React.FC<{ problems: SectorData['problems'] }> = ({ problems }) => (
  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {problems.map((problem, index) => (
      <div key={index} className="bg-red-50 border border-red-200 rounded-xl p-6">
        <div className="flex items-center gap-3 mb-4">
          <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${
            problem.impact === 'high' ? 'bg-red-100' :
            problem.impact === 'medium' ? 'bg-yellow-100' : 'bg-green-100'
          }`}>
            <AlertTriangle className={`h-5 w-5 ${
              problem.impact === 'high' ? 'text-red-600' :
              problem.impact === 'medium' ? 'text-yellow-600' : 'text-green-600'
            }`} />
          </div>
          <div>
            <h3 className="font-bold text-gray-900 font-almarai">{problem.title}</h3>
            <span className={`text-xs px-2 py-1 rounded-full ${
              problem.impact === 'high' ? 'bg-red-100 text-red-800' :
              problem.impact === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'
            }`}>
              ุชุฃุซูุฑ {problem.impact === 'high' ? 'ุนุงูู' : problem.impact === 'medium' ? 'ูุชูุณุท' : 'ููุฎูุถ'}
            </span>
          </div>
        </div>
        <p className="text-gray-700 font-almarai">{problem.description}</p>
      </div>
    ))}
  </div>
);

const SolutionsTab: React.FC<{ solutions: SectorData['solutions'] }> = ({ solutions }) => (
  <div className="space-y-8">
    {solutions.map((solution, index) => (
      <div key={index} className="bg-green-50 border border-green-200 rounded-xl p-6">
        <div className="flex items-start gap-4">
          <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center flex-shrink-0">
            <CheckCircle className="h-6 w-6 text-green-600" />
          </div>
          <div className="flex-1">
            <h3 className="text-xl font-bold text-gray-900 font-almarai mb-2">{solution.title}</h3>
            <p className="text-gray-700 font-almarai mb-4">{solution.description}</p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {solution.benefits.map((benefit, benefitIndex) => (
                <div key={benefitIndex} className="flex items-center gap-2">
                  <CheckCircle className="h-4 w-4 text-green-600 flex-shrink-0" />
                  <span className="text-sm text-gray-700 font-almarai">{benefit}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
);

const DeliverablesTab: React.FC<{ deliverables: SectorData['deliverables']; sla: SectorData['sla'] }> = ({ deliverables, sla }) => (
  <div className="space-y-8">
    {deliverables.map((category, index) => (
      <div key={index} className="bg-blue-50 border border-blue-200 rounded-xl p-6">
        <h3 className="text-xl font-bold text-gray-900 font-almarai mb-4">{category.category}</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {category.items.map((item, itemIndex) => (
            <div key={itemIndex} className="bg-white rounded-lg p-4 border border-gray-200">
              <h4 className="font-bold text-gray-900 font-almarai mb-2">{item.name}</h4>
              <p className="text-sm text-gray-600 font-almarai mb-2">{item.description}</p>
              <div className="flex items-center gap-2 text-xs text-blue-600">
                <Clock className="h-3 w-3" />
                <span className="font-almarai">{item.timeline}</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
    
    {/* SLA */}
    <div className="bg-saudi-green bg-opacity-10 border border-saudi-green rounded-xl p-6">
      <h3 className="text-xl font-bold text-gray-900 font-almarai mb-4">ุงุชูุงููุฉ ูุณุชูู ุงูุฎุฏูุฉ (SLA)</h3>
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="text-center">
          <div className="w-16 h-16 bg-saudi-green rounded-full flex items-center justify-center mx-auto mb-2">
            <Clock className="h-8 w-8 text-white" />
          </div>
          <p className="font-bold text-gray-900 font-almarai">{sla.responseTime}</p>
          <p className="text-sm text-gray-600 font-almarai">ููุช ุงูุงุณุชุฌุงุจุฉ</p>
        </div>
        <div className="text-center">
          <div className="w-16 h-16 bg-saudi-green rounded-full flex items-center justify-center mx-auto mb-2">
            <Calendar className="h-8 w-8 text-white" />
          </div>
          <p className="font-bold text-gray-900 font-almarai">{sla.deliveryTime}</p>
          <p className="text-sm text-gray-600 font-almarai">ููุช ุงูุชุณููู</p>
        </div>
        <div className="text-center">
          <div className="w-16 h-16 bg-saudi-green rounded-full flex items-center justify-center mx-auto mb-2">
            <Edit className="h-8 w-8 text-white" />
          </div>
          <p className="font-bold text-gray-900 font-almarai">{sla.revisions}</p>
          <p className="text-sm text-gray-600 font-almarai">ุชุนุฏููุงุช ูุฌุงููุฉ</p>
        </div>
        <div className="text-center">
          <div className="w-16 h-16 bg-saudi-green rounded-full flex items-center justify-center mx-auto mb-2">
            <Shield className="h-8 w-8 text-white" />
          </div>
          <p className="font-bold text-gray-900 font-almarai">{sla.support}</p>
          <p className="text-sm text-gray-600 font-almarai">ุฏุนู ูุฌุงูู</p>
        </div>
      </div>
    </div>
  </div>
);

const InsightsTab: React.FC<{ insights: SectorData['marketInsights']; projections: SectorData['financialProjections'] }> = ({ insights, projections }) => (
  <div className="space-y-8">
    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <div className="bg-blue-50 rounded-xl p-6">
        <h3 className="font-bold text-blue-900 font-almarai mb-4">ุงูุงุชุฌุงูุงุช</h3>
        <div className="space-y-3">
          {insights.trends.map((trend, index) => (
            <div key={index} className="bg-white rounded-lg p-3">
              <h4 className="font-medium text-gray-900 font-almarai text-sm">{trend.title}</h4>
              <p className="text-xs text-blue-600 font-almarai">{trend.impact}</p>
            </div>
          ))}
        </div>
      </div>
      
      <div className="bg-green-50 rounded-xl p-6">
        <h3 className="font-bold text-green-900 font-almarai mb-4">ุงููุฑุต</h3>
        <div className="space-y-3">
          {insights.opportunities.map((opportunity, index) => (
            <div key={index} className="bg-white rounded-lg p-3">
              <h4 className="font-medium text-gray-900 font-almarai text-sm">{opportunity.title}</h4>
              <p className="text-xs text-green-600 font-almarai">{opportunity.potential}</p>
            </div>
          ))}
        </div>
      </div>
      
      <div className="bg-yellow-50 rounded-xl p-6">
        <h3 className="font-bold text-yellow-900 font-almarai mb-4">ุงูุชุญุฏูุงุช</h3>
        <div className="space-y-3">
          {insights.challenges.map((challenge, index) => (
            <div key={index} className="bg-white rounded-lg p-3">
              <h4 className="font-medium text-gray-900 font-almarai text-sm">{challenge.title}</h4>
              <p className="text-xs text-yellow-600 font-almarai">{challenge.mitigation}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
    
    <div className="bg-white rounded-xl border border-gray-200 p-6">
      <h3 className="text-xl font-bold text-gray-900 font-almarai mb-4">ุงูุชููุนุงุช ุงููุงููุฉ (5 ุณููุงุช)</h3>
      <ResponsiveContainer width="100%" height={300}>
        <RechartsLineChart data={projections}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="timeframe" />
          <YAxis />
          <Tooltip />
          <Line type="monotone" dataKey="revenue" stroke="#006B3F" strokeWidth={3} name="ุงูุฅูุฑุงุฏุงุช" />
          <Line type="monotone" dataKey="profit" stroke="#FFB800" strokeWidth={3} name="ุงูุฃุฑุจุงุญ" />
        </RechartsLineChart>
      </ResponsiveContainer>
    </div>
  </div>
);

const CaseStudiesTab: React.FC<{ cases: SectorData['caseStudies'] }> = ({ cases }) => (
  <div className="space-y-8">
    {cases.map((caseStudy, index) => (
      <div key={index} className="bg-gradient-to-r from-saudi-green to-saudi-gold rounded-xl p-8 text-white">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div>
            <div className="flex items-center gap-3 mb-4">
              <Star className="h-8 w-8" />
              <div>
                <h3 className="text-2xl font-bold font-almarai">{caseStudy.title}</h3>
                <p className="opacity-90 font-almarai">{caseStudy.client}</p>
              </div>
            </div>
            <div className="space-y-4">
              <div>
                <h4 className="font-bold font-almarai mb-2">ุงูุชุญุฏู:</h4>
                <p className="opacity-90 font-almarai">{caseStudy.challenge}</p>
              </div>
              <div>
                <h4 className="font-bold font-almarai mb-2">ุงูุญู:</h4>
                <p className="opacity-90 font-almarai">{caseStudy.solution}</p>
              </div>
            </div>
          </div>
          
          <div>
            <div className="bg-white bg-opacity-20 rounded-xl p-6">
              <h4 className="font-bold font-almarai mb-4">ุงููุชุงุฆุฌ ุงููุญููุฉ:</h4>
              <div className="space-y-2 mb-4">
                {caseStudy.results.map((result, resultIndex) => (
                  <div key={resultIndex} className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 flex-shrink-0" />
                    <span className="font-almarai">{result}</span>
                  </div>
                ))}
              </div>
              <div className="text-center">
                <p className="text-sm opacity-75 font-almarai">ุนุงุฆุฏ ุงูุงุณุชุซูุงุฑ</p>
                <p className="text-4xl font-bold font-almarai">{caseStudy.roi}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
);

// ูุงูุฐุฉ CTA
const CTAModal: React.FC<{ onClose: () => void; sectorName: string }> = ({ onClose, sectorName }) => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    projectType: sectorName,
    budget: '',
    timeline: '',
    message: ''
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    toast.success('ุชู ุฅุฑุณุงู ุทูุจู ุจูุฌุงุญ! ุณูุชูุงุตู ูุนู ุฎูุงู 24 ุณุงุนุฉ.');
    onClose();
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50"
      onClick={onClose}
    >
      <motion.div
        initial={{ scale: 0.9, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        exit={{ scale: 0.9, opacity: 0 }}
        className="bg-white rounded-2xl shadow-2xl max-w-md w-full max-h-[90vh] overflow-y-auto"
        onClick={(e) => e.stopPropagation()}
      >
        <div className="p-6 border-b border-gray-200">
          <div className="flex items-center justify-between">
            <h2 className="text-xl font-bold text-gray-900 font-almarai">
              ุทูุจ ุฏุฑุงุณุฉ ุฌุฏูู
            </h2>
            <button
              onClick={onClose}
              className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
            >
              <X className="h-5 w-5 text-gray-600" />
            </button>
          </div>
        </div>

        <form onSubmit={handleSubmit} className="p-6 space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 font-almarai mb-2">
              ุงูุงุณู ุงููุงูู *
            </label>
            <input
              type="text"
              required
              value={formData.name}
              onChange={(e) => setFormData({ ...formData, name: e.target.value })}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-saudi-green focus:border-transparent font-almarai"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 font-almarai mb-2">
              ุงูุจุฑูุฏ ุงูุฅููุชุฑููู *
            </label>
            <input
              type="email"
              required
              value={formData.email}
              onChange={(e) => setFormData({ ...formData, email: e.target.value })}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-saudi-green focus:border-transparent font-almarai"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 font-almarai mb-2">
              ุฑูู ุงููุงุชู *
            </label>
            <input
              type="tel"
              required
              value={formData.phone}
              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-saudi-green focus:border-transparent font-almarai"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 font-almarai mb-2">
              ุงูููุฒุงููุฉ ุงููุชููุนุฉ
            </label>
            <select
              value={formData.budget}
              onChange={(e) => setFormData({ ...formData, budget: e.target.value })}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-saudi-green focus:border-transparent font-almarai"
            >
              <option value="">ุงุฎุชุฑ ุงูููุฒุงููุฉ</option>
              <option value="less-100k">ุฃูู ูู 100,000 ุฑ.ุณ</option>
              <option value="100k-500k">100,000 - 500,000 ุฑ.ุณ</option>
              <option value="500k-1m">500,000 - 1,000,000 ุฑ.ุณ</option>
              <option value="more-1m">ุฃูุซุฑ ูู 1,000,000 ุฑ.ุณ</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 font-almarai mb-2">
              ุชูุงุตูู ุฅุถุงููุฉ
            </label>
            <textarea
              value={formData.message}
              onChange={(e) => setFormData({ ...formData, message: e.target.value })}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-saudi-green focus:border-transparent font-almarai h-24 resize-none"
              placeholder="ุฃุฎุจุฑูุง ุงููุฒูุฏ ุนู ูุดุฑูุนู..."
            />
          </div>

          <button
            type="submit"
            className="w-full bg-saudi-green text-white py-4 rounded-lg font-almarai font-bold text-lg hover:bg-green-700 transition-colors"
          >
            ุฅุฑุณุงู ุงูุทูุจ
          </button>
        </form>
      </motion.div>
    </motion.div>
  );
};

export default EnhancedSectorPage;
